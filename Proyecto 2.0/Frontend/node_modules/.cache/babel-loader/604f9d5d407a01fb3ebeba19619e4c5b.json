{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"children\", \"defaultHeight\", \"defaultWidth\", \"disableHeight\", \"disableWidth\", \"nonce\", \"onResize\", \"style\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { useForkRef, ownerWindow, useEventCallback, unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/material/utils';\nimport createDetectElementResize from '../lib/createDetectElementResize'; // TODO replace with https://caniuse.com/resizeobserver.\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst GridAutoSizer = /*#__PURE__*/React.forwardRef(function AutoSizer(props, ref) {\n  const {\n    children,\n    defaultHeight = null,\n    defaultWidth = null,\n    disableHeight = false,\n    disableWidth = false,\n    nonce,\n    onResize,\n    style\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const [state, setState] = React.useState({\n    height: defaultHeight,\n    width: defaultWidth\n  });\n  const rootRef = React.useRef(null);\n  const parentElement = React.useRef(null);\n  const handleResize = useEventCallback(() => {\n    // Guard against AutoSizer component being removed from the DOM immediately after being added.\n    // This can result in invalid style values which can result in NaN values if we don't handle them.\n    // See issue #150 for more context.\n    if (parentElement.current) {\n      const height = parentElement.current.offsetHeight || 0;\n      const width = parentElement.current.offsetWidth || 0;\n      const win = ownerWindow(parentElement.current);\n      const computedStyle = win.getComputedStyle(parentElement.current);\n      const paddingLeft = parseInt(computedStyle.paddingLeft, 10) || 0;\n      const paddingRight = parseInt(computedStyle.paddingRight, 10) || 0;\n      const paddingTop = parseInt(computedStyle.paddingTop, 10) || 0;\n      const paddingBottom = parseInt(computedStyle.paddingBottom, 10) || 0;\n      const newHeight = height - paddingTop - paddingBottom;\n      const newWidth = width - paddingLeft - paddingRight;\n\n      if (!disableHeight && state.height !== newHeight || !disableWidth && state.width !== newWidth) {\n        setState({\n          height: newHeight,\n          width: newWidth\n        });\n\n        if (onResize) {\n          onResize({\n            height: newHeight,\n            width: newWidth\n          });\n        }\n      }\n    }\n  });\n  useEnhancedEffect(() => {\n    var _parentElement$curren;\n\n    parentElement.current = rootRef.current.parentElement;\n\n    if (!parentElement) {\n      return undefined;\n    }\n\n    const win = ownerWindow((_parentElement$curren = parentElement.current) != null ? _parentElement$curren : undefined);\n    const detectElementResize = createDetectElementResize(nonce, win);\n    detectElementResize.addResizeListener(parentElement.current, handleResize);\n    handleResize();\n    return () => {\n      detectElementResize.removeResizeListener(parentElement.current, handleResize);\n    };\n  }, [nonce, handleResize]); // Outer div should not force width/height since that may prevent containers from shrinking.\n  // Inner component should overflow and use calculated width/height.\n  // See issue #68 for more information.\n\n  const outerStyle = {\n    overflow: 'visible'\n  };\n  const childParams = {};\n\n  if (!disableHeight) {\n    outerStyle.height = 0;\n    childParams.height = state.height;\n  }\n\n  if (!disableWidth) {\n    outerStyle.width = 0;\n    childParams.width = state.width;\n  }\n\n  const handleRef = useForkRef(rootRef, ref);\n  return /*#__PURE__*/_jsx(\"div\", _extends({\n    ref: handleRef,\n    style: _extends({}, outerStyle, style)\n  }, other, {\n    children: state.height === null && state.width === null ? null : children(childParams)\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridAutoSizer.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Default height to use for initial render; useful for SSR.\n   * @default null\n   */\n  defaultHeight: PropTypes.number,\n\n  /**\n   * Default width to use for initial render; useful for SSR.\n   * @default null\n   */\n  defaultWidth: PropTypes.number,\n\n  /**\n   * If `true`, disable dynamic :height property.\n   * @default false\n   */\n  disableHeight: PropTypes.bool,\n\n  /**\n   * If `true`, disable dynamic :width property.\n   * @default false\n   */\n  disableWidth: PropTypes.bool,\n\n  /**\n   * Nonce of the inlined stylesheet for Content Security Policy.\n   */\n  nonce: PropTypes.string,\n\n  /**\n   * Callback to be invoked on-resize.\n   * @param {AutoSizerSize} size The grid's size.\n   */\n  onResize: PropTypes.func\n} : void 0;\nexport { GridAutoSizer };","map":{"version":3,"names":["_extends","_objectWithoutPropertiesLoose","_excluded","React","PropTypes","useForkRef","ownerWindow","useEventCallback","unstable_useEnhancedEffect","useEnhancedEffect","createDetectElementResize","jsx","_jsx","GridAutoSizer","forwardRef","AutoSizer","props","ref","children","defaultHeight","defaultWidth","disableHeight","disableWidth","nonce","onResize","style","other","state","setState","useState","height","width","rootRef","useRef","parentElement","handleResize","current","offsetHeight","offsetWidth","win","computedStyle","getComputedStyle","paddingLeft","parseInt","paddingRight","paddingTop","paddingBottom","newHeight","newWidth","_parentElement$curren","undefined","detectElementResize","addResizeListener","removeResizeListener","outerStyle","overflow","childParams","handleRef","process","env","NODE_ENV","propTypes","number","bool","string","func"],"sources":["/Users/jonavq/Downloads/Proyecto 2.0/Frontend/node_modules/@mui/x-data-grid/components/GridAutoSizer.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"children\", \"defaultHeight\", \"defaultWidth\", \"disableHeight\", \"disableWidth\", \"nonce\", \"onResize\", \"style\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { useForkRef, ownerWindow, useEventCallback, unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/material/utils';\nimport createDetectElementResize from '../lib/createDetectElementResize'; // TODO replace with https://caniuse.com/resizeobserver.\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst GridAutoSizer = /*#__PURE__*/React.forwardRef(function AutoSizer(props, ref) {\n  const {\n    children,\n    defaultHeight = null,\n    defaultWidth = null,\n    disableHeight = false,\n    disableWidth = false,\n    nonce,\n    onResize,\n    style\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const [state, setState] = React.useState({\n    height: defaultHeight,\n    width: defaultWidth\n  });\n  const rootRef = React.useRef(null);\n  const parentElement = React.useRef(null);\n  const handleResize = useEventCallback(() => {\n    // Guard against AutoSizer component being removed from the DOM immediately after being added.\n    // This can result in invalid style values which can result in NaN values if we don't handle them.\n    // See issue #150 for more context.\n    if (parentElement.current) {\n      const height = parentElement.current.offsetHeight || 0;\n      const width = parentElement.current.offsetWidth || 0;\n      const win = ownerWindow(parentElement.current);\n      const computedStyle = win.getComputedStyle(parentElement.current);\n      const paddingLeft = parseInt(computedStyle.paddingLeft, 10) || 0;\n      const paddingRight = parseInt(computedStyle.paddingRight, 10) || 0;\n      const paddingTop = parseInt(computedStyle.paddingTop, 10) || 0;\n      const paddingBottom = parseInt(computedStyle.paddingBottom, 10) || 0;\n      const newHeight = height - paddingTop - paddingBottom;\n      const newWidth = width - paddingLeft - paddingRight;\n\n      if (!disableHeight && state.height !== newHeight || !disableWidth && state.width !== newWidth) {\n        setState({\n          height: newHeight,\n          width: newWidth\n        });\n\n        if (onResize) {\n          onResize({\n            height: newHeight,\n            width: newWidth\n          });\n        }\n      }\n    }\n  });\n  useEnhancedEffect(() => {\n    var _parentElement$curren;\n\n    parentElement.current = rootRef.current.parentElement;\n\n    if (!parentElement) {\n      return undefined;\n    }\n\n    const win = ownerWindow((_parentElement$curren = parentElement.current) != null ? _parentElement$curren : undefined);\n    const detectElementResize = createDetectElementResize(nonce, win);\n    detectElementResize.addResizeListener(parentElement.current, handleResize);\n    handleResize();\n    return () => {\n      detectElementResize.removeResizeListener(parentElement.current, handleResize);\n    };\n  }, [nonce, handleResize]); // Outer div should not force width/height since that may prevent containers from shrinking.\n  // Inner component should overflow and use calculated width/height.\n  // See issue #68 for more information.\n\n  const outerStyle = {\n    overflow: 'visible'\n  };\n  const childParams = {};\n\n  if (!disableHeight) {\n    outerStyle.height = 0;\n    childParams.height = state.height;\n  }\n\n  if (!disableWidth) {\n    outerStyle.width = 0;\n    childParams.width = state.width;\n  }\n\n  const handleRef = useForkRef(rootRef, ref);\n  return /*#__PURE__*/_jsx(\"div\", _extends({\n    ref: handleRef,\n    style: _extends({}, outerStyle, style)\n  }, other, {\n    children: state.height === null && state.width === null ? null : children(childParams)\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridAutoSizer.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Default height to use for initial render; useful for SSR.\n   * @default null\n   */\n  defaultHeight: PropTypes.number,\n\n  /**\n   * Default width to use for initial render; useful for SSR.\n   * @default null\n   */\n  defaultWidth: PropTypes.number,\n\n  /**\n   * If `true`, disable dynamic :height property.\n   * @default false\n   */\n  disableHeight: PropTypes.bool,\n\n  /**\n   * If `true`, disable dynamic :width property.\n   * @default false\n   */\n  disableWidth: PropTypes.bool,\n\n  /**\n   * Nonce of the inlined stylesheet for Content Security Policy.\n   */\n  nonce: PropTypes.string,\n\n  /**\n   * Callback to be invoked on-resize.\n   * @param {AutoSizerSize} size The grid's size.\n   */\n  onResize: PropTypes.func\n} : void 0;\nexport { GridAutoSizer };"],"mappings":"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"},"metadata":{},"sourceType":"module"}