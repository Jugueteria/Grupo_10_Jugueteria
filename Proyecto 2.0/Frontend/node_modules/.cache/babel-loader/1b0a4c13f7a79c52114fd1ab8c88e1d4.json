{"ast":null,"code":"var _jsxFileName = \"/Users/jonavq/Downloads/Proyecto 2.0/Frontend/src/components/ContentRowInfo.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport SmallCard from './SmallCard'; // import todosLosProductos from '../funciones/funciones'\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction ContentRowInfo() {\n  _s();\n\n  let [products, setProducts] = useState(\"No dispone\");\n  let [users, setUsers] = useState(\"Sin usuarios\");\n  let [orders, setOrders] = useState(\"No dispone\");\n  /*  Cada set de datos es un objeto literal */\n\n  /* <!-- Products in DB --> */\n\n  let data = [{\n    title: 'Total de productos',\n    color: 'primary',\n    icon: 'fa-boxes'\n  },\n  /* <!-- Total users --> */\n  {\n    title: ' Total de usuarios',\n    color: 'success',\n    icon: 'fa-user-check'\n  },\n  /* <!-- Total Categories --> */\n  {\n    title: 'Total de categorías',\n    color: 'warning',\n    icon: 'fa-award'\n  }];\n  useEffect(() => {\n    fetch(\"http://localhost:3001/api/products/total\").then(resultado => resultado.json()).then(dataProduct => {\n      console.log(dataProduct);\n      setProducts(dataProduct.meta.total_products);\n    });\n    fetch(\"http://localhost:3001/api/products/categories\").then(resultado => resultado.json()).then(dataCategories => {\n      console.log(dataCategories);\n      setOrders(dataCategories.meta.categories);\n    });\n    fetch(\"http://localhost:3001/api/users\").then(resultado => resultado.json()).then(dataUser => {\n      console.log(dataUser);\n      setUsers(dataUser.meta.total_users);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: data.map((item, i) => /*#__PURE__*/_jsxDEV(SmallCard, {\n        titulo: item.title,\n        cifra: item.cifra,\n        colorBorder: item.color,\n        icono: item.icon\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n\n_s(ContentRowInfo, \"jBofgkimES2wyvhjLQySmE2RTCI=\");\n\n_c = ContentRowInfo;\nexport default ContentRowInfo;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContentRowInfo\");","map":{"version":3,"names":["React","useEffect","useState","SmallCard","ContentRowInfo","products","setProducts","users","setUsers","orders","setOrders","data","title","color","icon","fetch","then","resultado","json","dataProduct","console","log","meta","total_products","dataCategories","categories","dataUser","total_users","map","item","i","cifra"],"sources":["/Users/jonavq/Downloads/Proyecto 2.0/Frontend/src/components/ContentRowInfo.js"],"sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport SmallCard from './SmallCard';\r\n// import todosLosProductos from '../funciones/funciones'\r\n\r\nfunction ContentRowInfo(){\r\n    let [products, setProducts] = useState(\"No dispone\");\r\n    let [users, setUsers] = useState(\"Sin usuarios\");\r\n    let [orders, setOrders] = useState(\"No dispone\")\r\n\r\n/*  Cada set de datos es un objeto literal */\r\n\r\n/* <!-- Products in DB --> */\r\n\r\nlet data =[\r\n\r\n{\r\n    title: 'Total de productos',\r\n    color: 'primary', \r\n    icon: 'fa-boxes'\r\n},\r\n\r\n/* <!-- Total users --> */\r\n\r\n{\r\n    title:' Total de usuarios', \r\n    color:'success', \r\n    icon:'fa-user-check'\r\n},\r\n\r\n/* <!-- Total Categories --> */\r\n\r\n {\r\n    title:'Total de categorías' ,\r\n    color:'warning',\r\n    icon:'fa-award'\r\n}\r\n]\r\n\r\nuseEffect(() => {\r\n    fetch(\"http://localhost:3001/api/products/total\")\r\n    .then(resultado => resultado.json())\r\n    .then(dataProduct => {\r\n        console.log(dataProduct)\r\n        setProducts(dataProduct.meta.total_products)\r\n    })\r\n\r\n    fetch(\"http://localhost:3001/api/products/categories\")\r\n    .then(resultado => resultado.json())\r\n    .then(dataCategories => {\r\n        console.log(dataCategories)\r\n        setOrders(dataCategories.meta.categories)\r\n    })\r\n\r\n    fetch(\"http://localhost:3001/api/users\")\r\n    .then(resultado => resultado.json())\r\n    .then(dataUser => {\r\n        console.log(dataUser)\r\n        setUsers(dataUser.meta.total_users)\r\n    })\r\n}, [])\r\n\r\n\r\n\r\nreturn (\r\n    <>\r\n        <div className=\"row\">\r\n            {data.map((item, i) => \r\n                <SmallCard key={i} \r\n                    titulo={item.title} \r\n                    cifra={item.cifra}\r\n                    colorBorder={item.color}\r\n                    icono={item.icon}\r\n                /> \r\n            )}\r\n        </div>\r\n    </>    \r\n)\r\n}\r\n\r\nexport default ContentRowInfo;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAOC,SAAP,MAAsB,aAAtB,C,CACA;;;;;AAEA,SAASC,cAAT,GAAyB;EAAA;;EACrB,IAAI,CAACC,QAAD,EAAWC,WAAX,IAA0BJ,QAAQ,CAAC,YAAD,CAAtC;EACA,IAAI,CAACK,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,cAAD,CAAhC;EACA,IAAI,CAACO,MAAD,EAASC,SAAT,IAAsBR,QAAQ,CAAC,YAAD,CAAlC;EAEJ;;EAEA;;EAEA,IAAIS,IAAI,GAAE,CAEV;IACIC,KAAK,EAAE,oBADX;IAEIC,KAAK,EAAE,SAFX;IAGIC,IAAI,EAAE;EAHV,CAFU;EAQV;EAEA;IACIF,KAAK,EAAC,oBADV;IAEIC,KAAK,EAAC,SAFV;IAGIC,IAAI,EAAC;EAHT,CAVU;EAgBV;EAEC;IACGF,KAAK,EAAC,qBADT;IAEGC,KAAK,EAAC,SAFT;IAGGC,IAAI,EAAC;EAHR,CAlBS,CAAV;EAyBAb,SAAS,CAAC,MAAM;IACZc,KAAK,CAAC,0CAAD,CAAL,CACCC,IADD,CACMC,SAAS,IAAIA,SAAS,CAACC,IAAV,EADnB,EAECF,IAFD,CAEMG,WAAW,IAAI;MACjBC,OAAO,CAACC,GAAR,CAAYF,WAAZ;MACAb,WAAW,CAACa,WAAW,CAACG,IAAZ,CAAiBC,cAAlB,CAAX;IACH,CALD;IAOAR,KAAK,CAAC,+CAAD,CAAL,CACCC,IADD,CACMC,SAAS,IAAIA,SAAS,CAACC,IAAV,EADnB,EAECF,IAFD,CAEMQ,cAAc,IAAI;MACpBJ,OAAO,CAACC,GAAR,CAAYG,cAAZ;MACAd,SAAS,CAACc,cAAc,CAACF,IAAf,CAAoBG,UAArB,CAAT;IACH,CALD;IAOAV,KAAK,CAAC,iCAAD,CAAL,CACCC,IADD,CACMC,SAAS,IAAIA,SAAS,CAACC,IAAV,EADnB,EAECF,IAFD,CAEMU,QAAQ,IAAI;MACdN,OAAO,CAACC,GAAR,CAAYK,QAAZ;MACAlB,QAAQ,CAACkB,QAAQ,CAACJ,IAAT,CAAcK,WAAf,CAAR;IACH,CALD;EAMH,CArBQ,EAqBN,EArBM,CAAT;EAyBA,oBACI;IAAA,uBACI;MAAK,SAAS,EAAC,KAAf;MAAA,UACKhB,IAAI,CAACiB,GAAL,CAAS,CAACC,IAAD,EAAOC,CAAP,kBACN,QAAC,SAAD;QACI,MAAM,EAAED,IAAI,CAACjB,KADjB;QAEI,KAAK,EAAEiB,IAAI,CAACE,KAFhB;QAGI,WAAW,EAAEF,IAAI,CAAChB,KAHtB;QAII,KAAK,EAAEgB,IAAI,CAACf;MAJhB,GAAgBgB,CAAhB;QAAA;QAAA;QAAA;MAAA,QADH;IADL;MAAA;MAAA;MAAA;IAAA;EADJ,iBADJ;AAcC;;GAzEQ1B,c;;KAAAA,c;AA2ET,eAAeA,cAAf"},"metadata":{},"sourceType":"module"}