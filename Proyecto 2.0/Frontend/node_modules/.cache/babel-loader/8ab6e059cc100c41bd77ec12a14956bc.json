{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"selected\", \"rowId\", \"row\", \"index\", \"style\", \"rowHeight\", \"className\", \"visibleColumns\", \"renderedColumns\", \"containerWidth\", \"firstColumnToRender\", \"lastColumnToRender\", \"cellFocus\", \"cellTabIndex\", \"editRowsState\", \"isLastVisible\", \"onClick\", \"onDoubleClick\", \"onMouseEnter\", \"onMouseLeave\"];\n/* eslint-disable jsx-a11y/click-events-have-key-events */\n\n/* eslint-disable jsx-a11y/interactive-supports-focus */\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport { GridEditModes, GridRowModes, GridCellModes } from '../models/gridEditRowModel';\nimport { useGridApiContext } from '../hooks/utils/useGridApiContext';\nimport { getDataGridUtilityClass, gridClasses } from '../constants/gridClasses';\nimport { useGridRootProps } from '../hooks/utils/useGridRootProps';\nimport { gridColumnsTotalWidthSelector } from '../hooks/features/columns/gridColumnsSelector';\nimport { useGridSelector } from '../hooks/utils/useGridSelector';\nimport { useGridVisibleRows } from '../hooks/utils/useGridVisibleRows';\nimport { findParentElementFromClassName } from '../utils/domUtils';\nimport { GRID_CHECKBOX_SELECTION_COL_DEF } from '../colDef/gridCheckboxSelectionColDef';\nimport { GRID_ACTIONS_COLUMN_TYPE } from '../colDef/gridActionsColDef';\nimport { GRID_DETAIL_PANEL_TOGGLE_FIELD } from '../constants/gridDetailPanelToggleField';\nimport { gridSortModelSelector } from '../hooks/features/sorting/gridSortingSelector';\nimport { gridRowTreeDepthSelector } from '../hooks/features/rows/gridRowsSelector';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    editable,\n    editing,\n    selected,\n    isLastVisible,\n    rowHeight,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['row', selected && 'selected', editable && 'row--editable', editing && 'row--editing', isLastVisible && 'row--lastVisible', rowHeight === 'auto' && 'row--dynamicHeight']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\n\nconst EmptyCell = _ref => {\n  let {\n    width\n  } = _ref;\n\n  if (!width) {\n    return null;\n  }\n\n  const style = {\n    width\n  };\n  return /*#__PURE__*/_jsx(\"div\", {\n    className: \"MuiDataGrid-cell\",\n    style: style\n  }); // TODO change to .MuiDataGrid-emptyCell or .MuiDataGrid-rowFiller\n};\n\nfunction GridRow(props) {\n  var _apiRef$current$getRo;\n\n  const {\n    selected,\n    rowId,\n    row,\n    index,\n    style: styleProp,\n    rowHeight,\n    className,\n    visibleColumns,\n    renderedColumns,\n    containerWidth,\n    firstColumnToRender,\n    cellFocus,\n    cellTabIndex,\n    editRowsState,\n    isLastVisible = false,\n    onClick,\n    onDoubleClick,\n    onMouseEnter,\n    onMouseLeave\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ariaRowIndex = index + 2; // 1 for the header row and 1 as it's 1-based\n\n  const apiRef = useGridApiContext();\n  const ref = React.useRef(null);\n  const rootProps = useGridRootProps();\n  const currentPage = useGridVisibleRows(apiRef, rootProps);\n  const columnsTotalWidth = useGridSelector(apiRef, gridColumnsTotalWidthSelector);\n  const sortModel = useGridSelector(apiRef, gridSortModelSelector);\n  const treeDepth = useGridSelector(apiRef, gridRowTreeDepthSelector);\n  const {\n    hasScrollX,\n    hasScrollY\n  } = (_apiRef$current$getRo = apiRef.current.getRootDimensions()) != null ? _apiRef$current$getRo : {\n    hasScrollX: false,\n    hasScrollY: false\n  };\n  const ownerState = {\n    selected,\n    isLastVisible,\n    classes: rootProps.classes,\n    editing: apiRef.current.getRowMode(rowId) === GridRowModes.Edit,\n    editable: rootProps.editMode === GridEditModes.Row,\n    rowHeight\n  };\n  const classes = useUtilityClasses(ownerState);\n  React.useLayoutEffect(() => {\n    if (rowHeight === 'auto' && ref.current && typeof ResizeObserver === 'undefined') {\n      // Fallback for IE\n      apiRef.current.unstable_storeRowHeightMeasurement(rowId, ref.current.clientHeight);\n    }\n  });\n  React.useLayoutEffect(() => {\n    if (currentPage.range) {\n      // The index prop is relative to the rows from all pages. As example, the index prop of the\n      // first row is 5 if pageSize=5 and page=1. However, the index used by the virtualization\n      // doesn't care about pagination and considers the rows from the current page only, so the\n      // first row always has index=0. We need to subtract the index of the first row to make it\n      // compatible with the index used by the virtualization.\n      apiRef.current.unstable_setLastMeasuredRowIndex(index - currentPage.range.firstRowIndex);\n    }\n\n    const rootElement = ref.current;\n    const hasFixedHeight = rowHeight !== 'auto';\n\n    if (!rootElement || hasFixedHeight || typeof ResizeObserver === 'undefined') {\n      return undefined;\n    }\n\n    const resizeObserver = new ResizeObserver(entries => {\n      const [entry] = entries;\n      const height = entry.borderBoxSize && entry.borderBoxSize.length > 0 ? entry.borderBoxSize[0].blockSize : entry.contentRect.height;\n      apiRef.current.unstable_storeRowHeightMeasurement(rowId, height);\n    });\n    resizeObserver.observe(rootElement);\n    return () => resizeObserver.disconnect();\n  }, [apiRef, currentPage.range, index, rowHeight, rowId]);\n  const publish = React.useCallback((eventName, propHandler) => event => {\n    // Ignore portal\n    // The target is not an element when triggered by a Select inside the cell\n    // See https://github.com/mui/material-ui/issues/10534\n    if (event.target.nodeType === 1 && !event.currentTarget.contains(event.target)) {\n      return;\n    } // The row might have been deleted\n\n\n    if (!apiRef.current.getRow(rowId)) {\n      return;\n    }\n\n    apiRef.current.publishEvent(eventName, apiRef.current.getRowParams(rowId), event);\n\n    if (propHandler) {\n      propHandler(event);\n    }\n  }, [apiRef, rowId]);\n  const publishClick = React.useCallback(event => {\n    const cell = findParentElementFromClassName(event.target, gridClasses.cell);\n    const field = cell == null ? void 0 : cell.getAttribute('data-field'); // Check if the field is available because the cell that fills the empty\n    // space of the row has no field.\n\n    if (field) {\n      // User clicked in the checkbox added by checkboxSelection\n      if (field === GRID_CHECKBOX_SELECTION_COL_DEF.field) {\n        return;\n      } // User opened a detail panel\n\n\n      if (field === GRID_DETAIL_PANEL_TOGGLE_FIELD) {\n        return;\n      } // User reorders a row\n\n\n      if (field === '__reorder__') {\n        return;\n      } // User is editing a cell\n\n\n      if (apiRef.current.getCellMode(rowId, field) === GridCellModes.Edit) {\n        return;\n      } // User clicked a button from the \"actions\" column type\n\n\n      const column = apiRef.current.getColumn(field);\n\n      if (column.type === GRID_ACTIONS_COLUMN_TYPE) {\n        return;\n      }\n    }\n\n    publish('rowClick', onClick)(event);\n  }, [apiRef, onClick, publish, rowId]);\n\n  const style = _extends({}, styleProp, {\n    maxHeight: rowHeight === 'auto' ? 'none' : rowHeight,\n    // max-height doesn't support \"auto\"\n    minHeight: rowHeight\n  });\n\n  const sizes = apiRef.current.unstable_getRowInternalSizes(rowId);\n\n  if (sizes != null && sizes.spacingTop) {\n    const property = rootProps.rowSpacingType === 'border' ? 'borderTopWidth' : 'marginTop';\n    style[property] = sizes.spacingTop;\n  }\n\n  if (sizes != null && sizes.spacingBottom) {\n    const property = rootProps.rowSpacingType === 'border' ? 'borderBottomWidth' : 'marginBottom';\n    style[property] = sizes.spacingBottom;\n  }\n\n  let rowClassName = null;\n\n  if (typeof rootProps.getRowClassName === 'function') {\n    const indexRelativeToCurrentPage = index - currentPage.range.firstRowIndex;\n\n    const rowParams = _extends({}, apiRef.current.getRowParams(rowId), {\n      isFirstVisible: indexRelativeToCurrentPage === 0,\n      isLastVisible: indexRelativeToCurrentPage === currentPage.rows.length - 1,\n      indexRelativeToCurrentPage\n    });\n\n    rowClassName = rootProps.getRowClassName(rowParams);\n  }\n\n  const cells = [];\n\n  for (let i = 0; i < renderedColumns.length; i += 1) {\n    const column = renderedColumns[i];\n    const indexRelativeToAllColumns = firstColumnToRender + i;\n    const isLastColumn = indexRelativeToAllColumns === visibleColumns.length - 1;\n    const removeLastBorderRight = isLastColumn && hasScrollX && !hasScrollY;\n    const showRightBorder = !isLastColumn ? rootProps.showCellRightBorder : !removeLastBorderRight && rootProps.disableExtendRowFullWidth;\n    const cellParams = apiRef.current.getCellParams(rowId, column.field);\n    const classNames = [];\n    const disableDragEvents = rootProps.disableColumnReorder && column.disableReorder || !rootProps.rowReordering && !!sortModel.length && treeDepth > 1 && Object.keys(editRowsState).length > 0;\n\n    if (column.cellClassName) {\n      classNames.push(clsx(typeof column.cellClassName === 'function' ? column.cellClassName(cellParams) : column.cellClassName));\n    }\n\n    const editCellState = editRowsState[rowId] ? editRowsState[rowId][column.field] : null;\n    let content = null;\n\n    if (editCellState == null && column.renderCell) {\n      var _rootProps$classes;\n\n      content = column.renderCell(_extends({}, cellParams, {\n        api: apiRef.current\n      })); // TODO move to GridCell\n\n      classNames.push(clsx(gridClasses['cell--withRenderer'], (_rootProps$classes = rootProps.classes) == null ? void 0 : _rootProps$classes['cell--withRenderer']));\n    }\n\n    if (editCellState != null && column.renderEditCell) {\n      var _rootProps$classes2;\n\n      let updatedRow = row;\n\n      if (apiRef.current.unstable_getRowWithUpdatedValues) {\n        // Only the new editing API has this method\n        updatedRow = apiRef.current.unstable_getRowWithUpdatedValues(rowId, column.field);\n      }\n\n      const params = _extends({}, cellParams, {\n        row: updatedRow\n      }, editCellState, {\n        api: apiRef.current\n      });\n\n      content = column.renderEditCell(params); // TODO move to GridCell\n\n      classNames.push(clsx(gridClasses['cell--editing'], (_rootProps$classes2 = rootProps.classes) == null ? void 0 : _rootProps$classes2['cell--editing']));\n    }\n\n    if (rootProps.getCellClassName) {\n      // TODO move to GridCell\n      classNames.push(rootProps.getCellClassName(cellParams));\n    }\n\n    const hasFocus = cellFocus !== null && cellFocus.id === rowId && cellFocus.field === column.field;\n    const tabIndex = cellTabIndex !== null && cellTabIndex.id === rowId && cellTabIndex.field === column.field && cellParams.cellMode === 'view' ? 0 : -1;\n    const cellColSpanInfo = apiRef.current.unstable_getCellColSpanInfo(rowId, indexRelativeToAllColumns);\n\n    if (cellColSpanInfo && !cellColSpanInfo.spannedByColSpan) {\n      var _rootProps$components;\n\n      const {\n        colSpan,\n        width\n      } = cellColSpanInfo.cellProps;\n      cells.push( /*#__PURE__*/_jsx(rootProps.components.Cell, _extends({\n        value: cellParams.value,\n        field: column.field,\n        width: width,\n        rowId: rowId,\n        height: rowHeight,\n        showRightBorder: showRightBorder,\n        formattedValue: cellParams.formattedValue,\n        align: column.align || 'left',\n        cellMode: cellParams.cellMode,\n        colIndex: indexRelativeToAllColumns,\n        isEditable: cellParams.isEditable,\n        hasFocus: hasFocus,\n        tabIndex: tabIndex,\n        className: clsx(classNames),\n        colSpan: colSpan,\n        disableDragEvents: disableDragEvents\n      }, (_rootProps$components = rootProps.componentsProps) == null ? void 0 : _rootProps$components.cell, {\n        children: content\n      }), column.field));\n    }\n  }\n\n  const emptyCellWidth = containerWidth - columnsTotalWidth;\n  return /*#__PURE__*/_jsxs(\"div\", _extends({\n    ref: ref,\n    \"data-id\": rowId,\n    \"data-rowindex\": index,\n    role: \"row\",\n    className: clsx(rowClassName, classes.root, className),\n    \"aria-rowindex\": ariaRowIndex,\n    \"aria-selected\": selected,\n    style: style,\n    onClick: publishClick,\n    onDoubleClick: publish('rowDoubleClick', onDoubleClick),\n    onMouseEnter: publish('rowMouseEnter', onMouseEnter),\n    onMouseLeave: publish('rowMouseLeave', onMouseLeave)\n  }, other, {\n    children: [cells, emptyCellWidth > 0 && /*#__PURE__*/_jsx(EmptyCell, {\n      width: emptyCellWidth\n    })]\n  }));\n}\n\nprocess.env.NODE_ENV !== \"production\" ? GridRow.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  cellFocus: PropTypes.object,\n  cellTabIndex: PropTypes.object,\n  containerWidth: PropTypes.number.isRequired,\n  editRowsState: PropTypes.object.isRequired,\n  firstColumnToRender: PropTypes.number.isRequired,\n\n  /**\n   * Index of the row in the whole sorted and filtered dataset.\n   * If some rows above have expanded children, this index also take those children into account.\n   */\n  index: PropTypes.number.isRequired,\n  isLastVisible: PropTypes.bool,\n  lastColumnToRender: PropTypes.number.isRequired,\n  renderedColumns: PropTypes.arrayOf(PropTypes.object).isRequired,\n  row: PropTypes.any.isRequired,\n  rowHeight: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number]).isRequired,\n  rowId: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  selected: PropTypes.bool.isRequired,\n  visibleColumns: PropTypes.arrayOf(PropTypes.object).isRequired\n} : void 0;\nexport { GridRow };","map":{"version":3,"names":["_extends","_objectWithoutPropertiesLoose","_excluded","React","PropTypes","clsx","unstable_composeClasses","composeClasses","GridEditModes","GridRowModes","GridCellModes","useGridApiContext","getDataGridUtilityClass","gridClasses","useGridRootProps","gridColumnsTotalWidthSelector","useGridSelector","useGridVisibleRows","findParentElementFromClassName","GRID_CHECKBOX_SELECTION_COL_DEF","GRID_ACTIONS_COLUMN_TYPE","GRID_DETAIL_PANEL_TOGGLE_FIELD","gridSortModelSelector","gridRowTreeDepthSelector","jsx","_jsx","jsxs","_jsxs","useUtilityClasses","ownerState","editable","editing","selected","isLastVisible","rowHeight","classes","slots","root","EmptyCell","width","style","className","GridRow","props","_apiRef$current$getRo","rowId","row","index","styleProp","visibleColumns","renderedColumns","containerWidth","firstColumnToRender","cellFocus","cellTabIndex","editRowsState","onClick","onDoubleClick","onMouseEnter","onMouseLeave","other","ariaRowIndex","apiRef","ref","useRef","rootProps","currentPage","columnsTotalWidth","sortModel","treeDepth","hasScrollX","hasScrollY","current","getRootDimensions","getRowMode","Edit","editMode","Row","useLayoutEffect","ResizeObserver","unstable_storeRowHeightMeasurement","clientHeight","range","unstable_setLastMeasuredRowIndex","firstRowIndex","rootElement","hasFixedHeight","undefined","resizeObserver","entries","entry","height","borderBoxSize","length","blockSize","contentRect","observe","disconnect","publish","useCallback","eventName","propHandler","event","target","nodeType","currentTarget","contains","getRow","publishEvent","getRowParams","publishClick","cell","field","getAttribute","getCellMode","column","getColumn","type","maxHeight","minHeight","sizes","unstable_getRowInternalSizes","spacingTop","property","rowSpacingType","spacingBottom","rowClassName","getRowClassName","indexRelativeToCurrentPage","rowParams","isFirstVisible","rows","cells","i","indexRelativeToAllColumns","isLastColumn","removeLastBorderRight","showRightBorder","showCellRightBorder","disableExtendRowFullWidth","cellParams","getCellParams","classNames","disableDragEvents","disableColumnReorder","disableReorder","rowReordering","Object","keys","cellClassName","push","editCellState","content","renderCell","_rootProps$classes","api","renderEditCell","_rootProps$classes2","updatedRow","unstable_getRowWithUpdatedValues","params","getCellClassName","hasFocus","id","tabIndex","cellMode","cellColSpanInfo","unstable_getCellColSpanInfo","spannedByColSpan","_rootProps$components","colSpan","cellProps","components","Cell","value","formattedValue","align","colIndex","isEditable","componentsProps","children","emptyCellWidth","role","process","env","NODE_ENV","propTypes","object","number","isRequired","bool","lastColumnToRender","arrayOf","any","oneOfType","oneOf","string"],"sources":["/Users/jonavq/Downloads/Proyecto 2.0/Frontend/node_modules/@mui/x-data-grid/components/GridRow.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"selected\", \"rowId\", \"row\", \"index\", \"style\", \"rowHeight\", \"className\", \"visibleColumns\", \"renderedColumns\", \"containerWidth\", \"firstColumnToRender\", \"lastColumnToRender\", \"cellFocus\", \"cellTabIndex\", \"editRowsState\", \"isLastVisible\", \"onClick\", \"onDoubleClick\", \"onMouseEnter\", \"onMouseLeave\"];\n\n/* eslint-disable jsx-a11y/click-events-have-key-events */\n\n/* eslint-disable jsx-a11y/interactive-supports-focus */\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport { GridEditModes, GridRowModes, GridCellModes } from '../models/gridEditRowModel';\nimport { useGridApiContext } from '../hooks/utils/useGridApiContext';\nimport { getDataGridUtilityClass, gridClasses } from '../constants/gridClasses';\nimport { useGridRootProps } from '../hooks/utils/useGridRootProps';\nimport { gridColumnsTotalWidthSelector } from '../hooks/features/columns/gridColumnsSelector';\nimport { useGridSelector } from '../hooks/utils/useGridSelector';\nimport { useGridVisibleRows } from '../hooks/utils/useGridVisibleRows';\nimport { findParentElementFromClassName } from '../utils/domUtils';\nimport { GRID_CHECKBOX_SELECTION_COL_DEF } from '../colDef/gridCheckboxSelectionColDef';\nimport { GRID_ACTIONS_COLUMN_TYPE } from '../colDef/gridActionsColDef';\nimport { GRID_DETAIL_PANEL_TOGGLE_FIELD } from '../constants/gridDetailPanelToggleField';\nimport { gridSortModelSelector } from '../hooks/features/sorting/gridSortingSelector';\nimport { gridRowTreeDepthSelector } from '../hooks/features/rows/gridRowsSelector';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    editable,\n    editing,\n    selected,\n    isLastVisible,\n    rowHeight,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['row', selected && 'selected', editable && 'row--editable', editing && 'row--editing', isLastVisible && 'row--lastVisible', rowHeight === 'auto' && 'row--dynamicHeight']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\n\nconst EmptyCell = ({\n  width\n}) => {\n  if (!width) {\n    return null;\n  }\n\n  const style = {\n    width\n  };\n  return /*#__PURE__*/_jsx(\"div\", {\n    className: \"MuiDataGrid-cell\",\n    style: style\n  }); // TODO change to .MuiDataGrid-emptyCell or .MuiDataGrid-rowFiller\n};\n\nfunction GridRow(props) {\n  var _apiRef$current$getRo;\n\n  const {\n    selected,\n    rowId,\n    row,\n    index,\n    style: styleProp,\n    rowHeight,\n    className,\n    visibleColumns,\n    renderedColumns,\n    containerWidth,\n    firstColumnToRender,\n    cellFocus,\n    cellTabIndex,\n    editRowsState,\n    isLastVisible = false,\n    onClick,\n    onDoubleClick,\n    onMouseEnter,\n    onMouseLeave\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ariaRowIndex = index + 2; // 1 for the header row and 1 as it's 1-based\n\n  const apiRef = useGridApiContext();\n  const ref = React.useRef(null);\n  const rootProps = useGridRootProps();\n  const currentPage = useGridVisibleRows(apiRef, rootProps);\n  const columnsTotalWidth = useGridSelector(apiRef, gridColumnsTotalWidthSelector);\n  const sortModel = useGridSelector(apiRef, gridSortModelSelector);\n  const treeDepth = useGridSelector(apiRef, gridRowTreeDepthSelector);\n  const {\n    hasScrollX,\n    hasScrollY\n  } = (_apiRef$current$getRo = apiRef.current.getRootDimensions()) != null ? _apiRef$current$getRo : {\n    hasScrollX: false,\n    hasScrollY: false\n  };\n  const ownerState = {\n    selected,\n    isLastVisible,\n    classes: rootProps.classes,\n    editing: apiRef.current.getRowMode(rowId) === GridRowModes.Edit,\n    editable: rootProps.editMode === GridEditModes.Row,\n    rowHeight\n  };\n  const classes = useUtilityClasses(ownerState);\n  React.useLayoutEffect(() => {\n    if (rowHeight === 'auto' && ref.current && typeof ResizeObserver === 'undefined') {\n      // Fallback for IE\n      apiRef.current.unstable_storeRowHeightMeasurement(rowId, ref.current.clientHeight);\n    }\n  });\n  React.useLayoutEffect(() => {\n    if (currentPage.range) {\n      // The index prop is relative to the rows from all pages. As example, the index prop of the\n      // first row is 5 if pageSize=5 and page=1. However, the index used by the virtualization\n      // doesn't care about pagination and considers the rows from the current page only, so the\n      // first row always has index=0. We need to subtract the index of the first row to make it\n      // compatible with the index used by the virtualization.\n      apiRef.current.unstable_setLastMeasuredRowIndex(index - currentPage.range.firstRowIndex);\n    }\n\n    const rootElement = ref.current;\n    const hasFixedHeight = rowHeight !== 'auto';\n\n    if (!rootElement || hasFixedHeight || typeof ResizeObserver === 'undefined') {\n      return undefined;\n    }\n\n    const resizeObserver = new ResizeObserver(entries => {\n      const [entry] = entries;\n      const height = entry.borderBoxSize && entry.borderBoxSize.length > 0 ? entry.borderBoxSize[0].blockSize : entry.contentRect.height;\n      apiRef.current.unstable_storeRowHeightMeasurement(rowId, height);\n    });\n    resizeObserver.observe(rootElement);\n    return () => resizeObserver.disconnect();\n  }, [apiRef, currentPage.range, index, rowHeight, rowId]);\n  const publish = React.useCallback((eventName, propHandler) => event => {\n    // Ignore portal\n    // The target is not an element when triggered by a Select inside the cell\n    // See https://github.com/mui/material-ui/issues/10534\n    if (event.target.nodeType === 1 && !event.currentTarget.contains(event.target)) {\n      return;\n    } // The row might have been deleted\n\n\n    if (!apiRef.current.getRow(rowId)) {\n      return;\n    }\n\n    apiRef.current.publishEvent(eventName, apiRef.current.getRowParams(rowId), event);\n\n    if (propHandler) {\n      propHandler(event);\n    }\n  }, [apiRef, rowId]);\n  const publishClick = React.useCallback(event => {\n    const cell = findParentElementFromClassName(event.target, gridClasses.cell);\n    const field = cell == null ? void 0 : cell.getAttribute('data-field'); // Check if the field is available because the cell that fills the empty\n    // space of the row has no field.\n\n    if (field) {\n      // User clicked in the checkbox added by checkboxSelection\n      if (field === GRID_CHECKBOX_SELECTION_COL_DEF.field) {\n        return;\n      } // User opened a detail panel\n\n\n      if (field === GRID_DETAIL_PANEL_TOGGLE_FIELD) {\n        return;\n      } // User reorders a row\n\n\n      if (field === '__reorder__') {\n        return;\n      } // User is editing a cell\n\n\n      if (apiRef.current.getCellMode(rowId, field) === GridCellModes.Edit) {\n        return;\n      } // User clicked a button from the \"actions\" column type\n\n\n      const column = apiRef.current.getColumn(field);\n\n      if (column.type === GRID_ACTIONS_COLUMN_TYPE) {\n        return;\n      }\n    }\n\n    publish('rowClick', onClick)(event);\n  }, [apiRef, onClick, publish, rowId]);\n\n  const style = _extends({}, styleProp, {\n    maxHeight: rowHeight === 'auto' ? 'none' : rowHeight,\n    // max-height doesn't support \"auto\"\n    minHeight: rowHeight\n  });\n\n  const sizes = apiRef.current.unstable_getRowInternalSizes(rowId);\n\n  if (sizes != null && sizes.spacingTop) {\n    const property = rootProps.rowSpacingType === 'border' ? 'borderTopWidth' : 'marginTop';\n    style[property] = sizes.spacingTop;\n  }\n\n  if (sizes != null && sizes.spacingBottom) {\n    const property = rootProps.rowSpacingType === 'border' ? 'borderBottomWidth' : 'marginBottom';\n    style[property] = sizes.spacingBottom;\n  }\n\n  let rowClassName = null;\n\n  if (typeof rootProps.getRowClassName === 'function') {\n    const indexRelativeToCurrentPage = index - currentPage.range.firstRowIndex;\n\n    const rowParams = _extends({}, apiRef.current.getRowParams(rowId), {\n      isFirstVisible: indexRelativeToCurrentPage === 0,\n      isLastVisible: indexRelativeToCurrentPage === currentPage.rows.length - 1,\n      indexRelativeToCurrentPage\n    });\n\n    rowClassName = rootProps.getRowClassName(rowParams);\n  }\n\n  const cells = [];\n\n  for (let i = 0; i < renderedColumns.length; i += 1) {\n    const column = renderedColumns[i];\n    const indexRelativeToAllColumns = firstColumnToRender + i;\n    const isLastColumn = indexRelativeToAllColumns === visibleColumns.length - 1;\n    const removeLastBorderRight = isLastColumn && hasScrollX && !hasScrollY;\n    const showRightBorder = !isLastColumn ? rootProps.showCellRightBorder : !removeLastBorderRight && rootProps.disableExtendRowFullWidth;\n    const cellParams = apiRef.current.getCellParams(rowId, column.field);\n    const classNames = [];\n    const disableDragEvents = rootProps.disableColumnReorder && column.disableReorder || !rootProps.rowReordering && !!sortModel.length && treeDepth > 1 && Object.keys(editRowsState).length > 0;\n\n    if (column.cellClassName) {\n      classNames.push(clsx(typeof column.cellClassName === 'function' ? column.cellClassName(cellParams) : column.cellClassName));\n    }\n\n    const editCellState = editRowsState[rowId] ? editRowsState[rowId][column.field] : null;\n    let content = null;\n\n    if (editCellState == null && column.renderCell) {\n      var _rootProps$classes;\n\n      content = column.renderCell(_extends({}, cellParams, {\n        api: apiRef.current\n      })); // TODO move to GridCell\n\n      classNames.push(clsx(gridClasses['cell--withRenderer'], (_rootProps$classes = rootProps.classes) == null ? void 0 : _rootProps$classes['cell--withRenderer']));\n    }\n\n    if (editCellState != null && column.renderEditCell) {\n      var _rootProps$classes2;\n\n      let updatedRow = row;\n\n      if (apiRef.current.unstable_getRowWithUpdatedValues) {\n        // Only the new editing API has this method\n        updatedRow = apiRef.current.unstable_getRowWithUpdatedValues(rowId, column.field);\n      }\n\n      const params = _extends({}, cellParams, {\n        row: updatedRow\n      }, editCellState, {\n        api: apiRef.current\n      });\n\n      content = column.renderEditCell(params); // TODO move to GridCell\n\n      classNames.push(clsx(gridClasses['cell--editing'], (_rootProps$classes2 = rootProps.classes) == null ? void 0 : _rootProps$classes2['cell--editing']));\n    }\n\n    if (rootProps.getCellClassName) {\n      // TODO move to GridCell\n      classNames.push(rootProps.getCellClassName(cellParams));\n    }\n\n    const hasFocus = cellFocus !== null && cellFocus.id === rowId && cellFocus.field === column.field;\n    const tabIndex = cellTabIndex !== null && cellTabIndex.id === rowId && cellTabIndex.field === column.field && cellParams.cellMode === 'view' ? 0 : -1;\n    const cellColSpanInfo = apiRef.current.unstable_getCellColSpanInfo(rowId, indexRelativeToAllColumns);\n\n    if (cellColSpanInfo && !cellColSpanInfo.spannedByColSpan) {\n      var _rootProps$components;\n\n      const {\n        colSpan,\n        width\n      } = cellColSpanInfo.cellProps;\n      cells.push( /*#__PURE__*/_jsx(rootProps.components.Cell, _extends({\n        value: cellParams.value,\n        field: column.field,\n        width: width,\n        rowId: rowId,\n        height: rowHeight,\n        showRightBorder: showRightBorder,\n        formattedValue: cellParams.formattedValue,\n        align: column.align || 'left',\n        cellMode: cellParams.cellMode,\n        colIndex: indexRelativeToAllColumns,\n        isEditable: cellParams.isEditable,\n        hasFocus: hasFocus,\n        tabIndex: tabIndex,\n        className: clsx(classNames),\n        colSpan: colSpan,\n        disableDragEvents: disableDragEvents\n      }, (_rootProps$components = rootProps.componentsProps) == null ? void 0 : _rootProps$components.cell, {\n        children: content\n      }), column.field));\n    }\n  }\n\n  const emptyCellWidth = containerWidth - columnsTotalWidth;\n  return /*#__PURE__*/_jsxs(\"div\", _extends({\n    ref: ref,\n    \"data-id\": rowId,\n    \"data-rowindex\": index,\n    role: \"row\",\n    className: clsx(rowClassName, classes.root, className),\n    \"aria-rowindex\": ariaRowIndex,\n    \"aria-selected\": selected,\n    style: style,\n    onClick: publishClick,\n    onDoubleClick: publish('rowDoubleClick', onDoubleClick),\n    onMouseEnter: publish('rowMouseEnter', onMouseEnter),\n    onMouseLeave: publish('rowMouseLeave', onMouseLeave)\n  }, other, {\n    children: [cells, emptyCellWidth > 0 && /*#__PURE__*/_jsx(EmptyCell, {\n      width: emptyCellWidth\n    })]\n  }));\n}\n\nprocess.env.NODE_ENV !== \"production\" ? GridRow.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  cellFocus: PropTypes.object,\n  cellTabIndex: PropTypes.object,\n  containerWidth: PropTypes.number.isRequired,\n  editRowsState: PropTypes.object.isRequired,\n  firstColumnToRender: PropTypes.number.isRequired,\n\n  /**\n   * Index of the row in the whole sorted and filtered dataset.\n   * If some rows above have expanded children, this index also take those children into account.\n   */\n  index: PropTypes.number.isRequired,\n  isLastVisible: PropTypes.bool,\n  lastColumnToRender: PropTypes.number.isRequired,\n  renderedColumns: PropTypes.arrayOf(PropTypes.object).isRequired,\n  row: PropTypes.any.isRequired,\n  rowHeight: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number]).isRequired,\n  rowId: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  selected: PropTypes.bool.isRequired,\n  visibleColumns: PropTypes.arrayOf(PropTypes.object).isRequired\n} : void 0;\nexport { GridRow };"],"mappings":"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"},"metadata":{},"sourceType":"module"}